{"ast":null,"code":"var _jsxFileName = \"/home/jonathan/\\xC1rea de Trabalho/Super-Events/src/components/Register/index.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport firebase from '../../firebase';\nimport './register.css';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport InputMask from 'react-input-mask';\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = event => {\n      var value = event.target.value;\n      var newState = {\n        mask: '999.999.999-99',\n        value: value\n      };\n\n      if (/^3[47]/.test(value)) {\n        newState.mask = '999.999.999-99';\n      }\n\n      this.setState(newState);\n      this.setState({\n        cpf: event.target.value\n      });\n    };\n\n    this.onRegister = async () => {\n      if (this.validarCPF(this.state.cpf)) {\n        try {\n          const _this$state = this.state,\n                nome = _this$state.nome,\n                cpf = _this$state.cpf,\n                email = _this$state.email,\n                password = _this$state.password,\n                imagem = _this$state.imagem;\n          await firebase.register(nome, cpf, email, password, imagem);\n          this.props.history.replace('/dashboard');\n        } catch (error) {\n          alert(error.message);\n        }\n      } else {\n        alert(\"CPF inválido!\"); //this.cpf.focus();\n      }\n    };\n\n    this.state = {\n      value: '',\n      mask: '999.999.999-99',\n      nome: '',\n      cpf: '',\n      email: '',\n      password: '',\n      imagem: 'https://firebasestorage.googleapis.com/v0/b/super-events-f85d9.appspot.com/o/Perfil%2Ffoto-perfil.jpg?alt=media&token=c4285a52-fc33-4604-b067-3e3000c0f529'\n    };\n    this.register = this.register.bind(this);\n    this.onRegister = this.onRegister.bind(this);\n    this.validarCPF = this.validarCPF.bind(this);\n  }\n\n  register(e) {\n    e.preventDefault();\n    this.onRegister();\n  }\n\n  validarCPF(cpf) {\n    cpf = cpf.replace(/[^\\d]+/g, '');\n    let rev;\n    let add;\n    if (cpf == '') return false;\n    if (cpf.length != 11 || cpf == \"00000000000\" || cpf == \"11111111111\" || cpf == \"22222222222\" || cpf == \"33333333333\" || cpf == \"44444444444\" || cpf == \"55555555555\" || cpf == \"66666666666\" || cpf == \"77777777777\" || cpf == \"88888888888\" || cpf == \"99999999999\") return false;\n    add = 0;\n\n    for (let i = 0; i < 9; i++) add += parseInt(cpf.charAt(i)) * (10 - i);\n\n    rev = 11 - add % 11;\n    if (rev == 10 || rev == 11) rev = 0;\n    if (rev != parseInt(cpf.charAt(9))) return false;\n    add = 0;\n\n    for (let i = 0; i < 10; i++) add += parseInt(cpf.charAt(i)) * (11 - i);\n\n    rev = 11 - add % 11;\n    if (rev == 10 || rev == 11) rev = 0;\n    if (rev != parseInt(cpf.charAt(10))) return false;\n    return true;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.register,\n      id: \"register\",\n      className: \"my-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"text-center text-info mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Criar Conta\"), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Nome\"), React.createElement(Input, {\n      id: \"name\",\n      type: \"text\",\n      value: this.state.nome,\n      autoFocus: true,\n      autoComplete: \"off\",\n      placeholder: \"Nome\",\n      onChange: e => this.setState({\n        nome: e.target.value\n      }),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"cpf\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"CPF\"), React.createElement(InputMask, Object.assign({\n      className: \"form-control\"\n    }, this.state, {\n      onChange: this.onChange,\n      id: \"cpf\",\n      value: this.state.cpf,\n      autoComplete: \"off\",\n      placeholder: \"000.000.000-00\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }))), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Input, {\n      id: \"email\",\n      type: \"email\",\n      value: this.state.email,\n      autoComplete: \"off\",\n      placeholder: \"email@email.com\",\n      onChange: e => this.setState({\n        email: e.target.value\n      }),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"pass\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Senha\"), React.createElement(Input, {\n      id: \"pass\",\n      type: \"password\",\n      value: this.state.password,\n      autoComplete: \"off\",\n      placeholder: \"Sua senha\",\n      minLength: \"6\",\n      onChange: e => this.setState({\n        password: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"submit\",\n      color: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Cadastrar\")));\n  }\n\n}\n\nexport default withRouter(Register);","map":{"version":3,"sources":["/home/jonathan/Área de Trabalho/Super-Events/src/components/Register/index.js"],"names":["React","Component","Link","withRouter","firebase","Button","Form","FormGroup","Label","Input","InputMask","Register","constructor","props","onChange","event","value","target","newState","mask","test","setState","cpf","onRegister","validarCPF","state","nome","email","password","imagem","register","history","replace","error","alert","message","bind","e","preventDefault","rev","add","length","i","parseInt","charAt","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAO,gBAAP;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,SAAvB,EAAkCC,KAAlC,EAAyCC,KAAzC,QAAsD,YAAtD;AACA,OAAOC,SAAP,MAAsB,kBAAtB;;AAEA,MAAMC,QAAN,SAAuBV,SAAvB,CAAiC;AAE7BW,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAgBnBC,QAhBmB,GAgBPC,KAAD,IAAW;AAClB,UAAIC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAAzB;AACA,UAAIE,QAAQ,GAAG;AACXC,QAAAA,IAAI,EAAE,gBADK;AAEXH,QAAAA,KAAK,EAAEA;AAFI,OAAf;;AAIA,UAAI,SAASI,IAAT,CAAcJ,KAAd,CAAJ,EAA0B;AACtBE,QAAAA,QAAQ,CAACC,IAAT,GAAgB,gBAAhB;AACH;;AACD,WAAKE,QAAL,CAAcH,QAAd;AACA,WAAKG,QAAL,CAAc;AAAEC,QAAAA,GAAG,EAAEP,KAAK,CAACE,MAAN,CAAaD;AAApB,OAAd;AACH,KA3BkB;;AAAA,SAkCnBO,UAlCmB,GAkCN,YAAY;AACrB,UAAI,KAAKC,UAAL,CAAgB,KAAKC,KAAL,CAAWH,GAA3B,CAAJ,EAAqC;AACjC,YAAI;AAAA,8BAC+C,KAAKG,KADpD;AAAA,gBACQC,IADR,eACQA,IADR;AAAA,gBACcJ,GADd,eACcA,GADd;AAAA,gBACmBK,KADnB,eACmBA,KADnB;AAAA,gBAC0BC,QAD1B,eAC0BA,QAD1B;AAAA,gBACoCC,MADpC,eACoCA,MADpC;AAEA,gBAAMzB,QAAQ,CAAC0B,QAAT,CAAkBJ,IAAlB,EAAwBJ,GAAxB,EAA6BK,KAA7B,EAAoCC,QAApC,EAA8CC,MAA9C,CAAN;AACA,eAAKhB,KAAL,CAAWkB,OAAX,CAAmBC,OAAnB,CAA2B,YAA3B;AAEH,SALD,CAKE,OAAOC,KAAP,EAAc;AACZC,UAAAA,KAAK,CAACD,KAAK,CAACE,OAAP,CAAL;AACH;AACJ,OATD,MASO;AACHD,QAAAA,KAAK,CAAC,eAAD,CAAL,CADG,CAEH;AACH;AACJ,KAhDkB;;AAEf,SAAKT,KAAL,GAAa;AACTT,MAAAA,KAAK,EAAE,EADE;AAETG,MAAAA,IAAI,EAAE,gBAFG;AAGTO,MAAAA,IAAI,EAAE,EAHG;AAITJ,MAAAA,GAAG,EAAE,EAJI;AAKTK,MAAAA,KAAK,EAAE,EALE;AAMTC,MAAAA,QAAQ,EAAE,EAND;AAOTC,MAAAA,MAAM,EAAE;AAPC,KAAb;AASA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcM,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKb,UAAL,GAAkB,KAAKA,UAAL,CAAgBa,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKZ,UAAL,GAAkB,KAAKA,UAAL,CAAgBY,IAAhB,CAAqB,IAArB,CAAlB;AACH;;AAeDN,EAAAA,QAAQ,CAACO,CAAD,EAAI;AACRA,IAAAA,CAAC,CAACC,cAAF;AACA,SAAKf,UAAL;AACH;;AAkBDC,EAAAA,UAAU,CAACF,GAAD,EAAM;AACZA,IAAAA,GAAG,GAAGA,GAAG,CAACU,OAAJ,CAAY,SAAZ,EAAuB,EAAvB,CAAN;AACA,QAAIO,GAAJ;AACA,QAAIC,GAAJ;AAEA,QAAIlB,GAAG,IAAI,EAAX,EAAe,OAAO,KAAP;AAEf,QAAIA,GAAG,CAACmB,MAAJ,IAAc,EAAd,IACAnB,GAAG,IAAI,aADP,IAEAA,GAAG,IAAI,aAFP,IAGAA,GAAG,IAAI,aAHP,IAIAA,GAAG,IAAI,aAJP,IAKAA,GAAG,IAAI,aALP,IAMAA,GAAG,IAAI,aANP,IAOAA,GAAG,IAAI,aAPP,IAQAA,GAAG,IAAI,aARP,IASAA,GAAG,IAAI,aATP,IAUAA,GAAG,IAAI,aAVX,EAWI,OAAO,KAAP;AAEJkB,IAAAA,GAAG,GAAG,CAAN;;AACA,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EACIF,GAAG,IAAIG,QAAQ,CAACrB,GAAG,CAACsB,MAAJ,CAAWF,CAAX,CAAD,CAAR,IAA2B,KAAKA,CAAhC,CAAP;;AACJH,IAAAA,GAAG,GAAG,KAAMC,GAAG,GAAG,EAAlB;AACA,QAAID,GAAG,IAAI,EAAP,IAAaA,GAAG,IAAI,EAAxB,EACIA,GAAG,GAAG,CAAN;AACJ,QAAIA,GAAG,IAAII,QAAQ,CAACrB,GAAG,CAACsB,MAAJ,CAAW,CAAX,CAAD,CAAnB,EACI,OAAO,KAAP;AAEJJ,IAAAA,GAAG,GAAG,CAAN;;AACA,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EACIF,GAAG,IAAIG,QAAQ,CAACrB,GAAG,CAACsB,MAAJ,CAAWF,CAAX,CAAD,CAAR,IAA2B,KAAKA,CAAhC,CAAP;;AACJH,IAAAA,GAAG,GAAG,KAAMC,GAAG,GAAG,EAAlB;AACA,QAAID,GAAG,IAAI,EAAP,IAAaA,GAAG,IAAI,EAAxB,EACIA,GAAG,GAAG,CAAN;AACJ,QAAIA,GAAG,IAAII,QAAQ,CAACrB,GAAG,CAACsB,MAAJ,CAAW,EAAX,CAAD,CAAnB,EACI,OAAO,KAAP;AACJ,WAAO,IAAP;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKf,QAArB;AAA+B,MAAA,EAAE,EAAC,UAAlC;AAA6C,MAAA,SAAS,EAAC,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,4BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,EAAE,EAAC,MAAV;AAAiB,MAAA,IAAI,EAAC,MAAtB;AAA6B,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC,IAA/C;AAAqD,MAAA,SAAS,MAA9D;AAA+D,MAAA,YAAY,EAAC,KAA5E;AAAkF,MAAA,WAAW,EAAC,MAA9F;AACI,MAAA,QAAQ,EAAGW,CAAD,IAAO,KAAKhB,QAAL,CAAc;AAAEK,QAAAA,IAAI,EAAEW,CAAC,CAACpB,MAAF,CAASD;AAAjB,OAAd,CADrB;AAC8D,MAAA,QAAQ,MADtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAFJ,EAQI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC;AAArB,OAAwC,KAAKS,KAA7C;AAAoD,MAAA,QAAQ,EAAE,KAAKX,QAAnE;AAA6E,MAAA,EAAE,EAAC,KAAhF;AAAsF,MAAA,KAAK,EAAE,KAAKW,KAAL,CAAWH,GAAxG;AACI,MAAA,YAAY,EAAC,KADjB;AACuB,MAAA,WAAW,EAAC,gBADnC;AACoD,MAAA,QAAQ,MAD5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFJ,CARJ,EAcI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,EAAE,EAAC,OAAV;AAAkB,MAAA,IAAI,EAAC,OAAvB;AAA+B,MAAA,KAAK,EAAE,KAAKG,KAAL,CAAWE,KAAjD;AAAwD,MAAA,YAAY,EAAC,KAArE;AAA2E,MAAA,WAAW,EAAC,iBAAvF;AACI,MAAA,QAAQ,EAAGU,CAAD,IAAO,KAAKhB,QAAL,CAAc;AAAEM,QAAAA,KAAK,EAAEU,CAAC,CAACpB,MAAF,CAASD;AAAlB,OAAd,CADrB;AAC+D,MAAA,QAAQ,MADvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAdJ,EAoBI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,EAAE,EAAC,MAAV;AAAiB,MAAA,IAAI,EAAC,UAAtB;AAAiC,MAAA,KAAK,EAAE,KAAKS,KAAL,CAAWG,QAAnD;AAA6D,MAAA,YAAY,EAAC,KAA1E;AAAgF,MAAA,WAAW,EAAC,WAA5F;AACI,MAAA,SAAS,EAAC,GADd;AACkB,MAAA,QAAQ,EAAGS,CAAD,IAAO,KAAKhB,QAAL,CAAc;AAAEO,QAAAA,QAAQ,EAAES,CAAC,CAACpB,MAAF,CAASD;AAArB,OAAd,CADnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CApBJ,EA0BI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBA1BJ,CADJ,CADJ;AAgCH;;AA7H4B;;AAgIjC,eAAeb,UAAU,CAACQ,QAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport firebase from '../../firebase';\r\nimport './register.css';\r\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport InputMask from 'react-input-mask';\r\n\r\nclass Register extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: '',\r\n            mask: '999.999.999-99',\r\n            nome: '',\r\n            cpf: '',\r\n            email: '',\r\n            password: '',\r\n            imagem: 'https://firebasestorage.googleapis.com/v0/b/super-events-f85d9.appspot.com/o/Perfil%2Ffoto-perfil.jpg?alt=media&token=c4285a52-fc33-4604-b067-3e3000c0f529'\r\n        };\r\n        this.register = this.register.bind(this);\r\n        this.onRegister = this.onRegister.bind(this);\r\n        this.validarCPF = this.validarCPF.bind(this);\r\n    }\r\n\r\n    onChange = (event) => {\r\n        var value = event.target.value;\r\n        var newState = {\r\n            mask: '999.999.999-99',\r\n            value: value\r\n        };\r\n        if (/^3[47]/.test(value)) {\r\n            newState.mask = '999.999.999-99';\r\n        }\r\n        this.setState(newState);\r\n        this.setState({ cpf: event.target.value });\r\n    }\r\n\r\n    register(e) {\r\n        e.preventDefault();\r\n        this.onRegister();\r\n    }\r\n\r\n    onRegister = async () => {\r\n        if (this.validarCPF(this.state.cpf)) {\r\n            try {\r\n                const { nome, cpf, email, password, imagem } = this.state;\r\n                await firebase.register(nome, cpf, email, password, imagem);\r\n                this.props.history.replace('/dashboard');\r\n\r\n            } catch (error) {\r\n                alert(error.message);\r\n            }\r\n        } else {\r\n            alert(\"CPF inválido!\");\r\n            //this.cpf.focus();\r\n        }\r\n    }\r\n    \r\n    validarCPF(cpf) {\r\n        cpf = cpf.replace(/[^\\d]+/g, '');\r\n        let rev;\r\n        let add;\r\n\r\n        if (cpf == '') return false;\r\n\r\n        if (cpf.length != 11 ||\r\n            cpf == \"00000000000\" ||\r\n            cpf == \"11111111111\" ||\r\n            cpf == \"22222222222\" ||\r\n            cpf == \"33333333333\" ||\r\n            cpf == \"44444444444\" ||\r\n            cpf == \"55555555555\" ||\r\n            cpf == \"66666666666\" ||\r\n            cpf == \"77777777777\" ||\r\n            cpf == \"88888888888\" ||\r\n            cpf == \"99999999999\")\r\n            return false;\r\n\r\n        add = 0;\r\n        for (let i = 0; i < 9; i++)\r\n            add += parseInt(cpf.charAt(i)) * (10 - i);\r\n        rev = 11 - (add % 11);\r\n        if (rev == 10 || rev == 11)\r\n            rev = 0;\r\n        if (rev != parseInt(cpf.charAt(9)))\r\n            return false;\r\n\r\n        add = 0;\r\n        for (let i = 0; i < 10; i++)\r\n            add += parseInt(cpf.charAt(i)) * (11 - i);\r\n        rev = 11 - (add % 11);\r\n        if (rev == 10 || rev == 11)\r\n            rev = 0;\r\n        if (rev != parseInt(cpf.charAt(10)))\r\n            return false;\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Form onSubmit={this.register} id=\"register\" className=\"my-2\">\r\n                    <h4 className=\"text-center text-info mb-4\">Criar Conta</h4>\r\n                    <FormGroup>\r\n                        <Label for=\"name\">Nome</Label>\r\n                        <Input id=\"name\" type=\"text\" value={this.state.nome} autoFocus autoComplete=\"off\" placeholder=\"Nome\"\r\n                            onChange={(e) => this.setState({ nome: e.target.value })} required />\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                        <Label for=\"cpf\">CPF</Label>\r\n                        <InputMask className=\"form-control\" {...this.state} onChange={this.onChange} id=\"cpf\" value={this.state.cpf}\r\n                            autoComplete=\"off\" placeholder=\"000.000.000-00\" required />\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                        <Label for=\"email\">Email</Label>\r\n                        <Input id=\"email\" type=\"email\" value={this.state.email} autoComplete=\"off\" placeholder=\"email@email.com\"\r\n                            onChange={(e) => this.setState({ email: e.target.value })} required />\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                        <Label for=\"pass\">Senha</Label>\r\n                        <Input id=\"pass\" type=\"password\" value={this.state.password} autoComplete=\"off\" placeholder=\"Sua senha\"\r\n                            minLength=\"6\" onChange={(e) => this.setState({ password: e.target.value })} />\r\n                    </FormGroup>\r\n\r\n                    <Button type=\"submit\" color=\"info\">Cadastrar</Button>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Register);"]},"metadata":{},"sourceType":"module"}