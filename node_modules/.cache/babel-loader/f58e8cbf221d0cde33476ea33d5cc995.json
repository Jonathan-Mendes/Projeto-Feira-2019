{"ast":null,"code":"var _jsxFileName = \"/home/jonathan/\\xC1rea de Trabalho/Super-Events/src/components/Login/index.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport firebase from '../../firebase';\nimport './login.css';\nimport { FaEye } from \"react-icons/fa\";\nimport { Button, Form, FormGroup, Label, Input, Modal, ModalHeader, ModalBody, ModalFooter, InputGroup, InputGroupAddon } from 'reactstrap';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.login = async () => {\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n\n      try {\n        await firebase.login(email, password).catch(error => {\n          if (error.code === 'auth/user-not-found') {\n            alert('Esse usuário não existe!');\n          } else {\n            alert('Codigo de erro: ' + error.code);\n            return null;\n          }\n        });\n        this.props.history.replace('/dashboard');\n      } catch (error) {\n        alert(error.message);\n      }\n    };\n\n    this.password = {\n      type: 'password',\n      s: '11'\n    };\n    this.state = {\n      emailResetPassword: '',\n      email: '',\n      password: '',\n      modal: false,\n      unmountOnClose: true\n    };\n    this.entrar = this.entrar.bind(this);\n    this.login = this.login.bind(this);\n    this.resetPassword = this.resetPassword.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.changeUnmountOnClose = this.changeUnmountOnClose.bind(this);\n    this.passwordHide = this.passwordHide.bind(this);\n  }\n\n  passwordHide() {// this.setState.password({type: 'text'})\n    // else this.setState.password({type: 'password'})\n  }\n\n  entrar(e) {\n    e.preventDefault();\n    this.login();\n  }\n\n  resetPassword() {\n    if (firebase.resetPassword(this.state.emailResetPassword)) {\n      alert('E-mail enviado com sucesso!');\n    } else {\n      alert('Este usuário não existe!');\n    }\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n\n  changeUnmountOnClose(e) {\n    let value = e.target.value;\n    this.setState({\n      unmountOnClose: JSON.parse(value)\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.entrar,\n      id: \"login\",\n      className: \"my-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"text-info text-center mb-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Entrar no Super Events\"), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Input, {\n      type: \"email\",\n      autoComplete: \"off\",\n      autoFocus: true,\n      value: this.state.email,\n      onChange: e => this.setState({\n        email: e.target.value\n      }),\n      placeholder: \"email@gmail.com\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Input, {\n      type: this.password.type,\n      autoComplete: \"off\",\n      value: this.state.password,\n      onChange: e => this.setState({\n        password: e.target.value\n      }),\n      minLength: \"4\",\n      placeholder: \"Sua senha\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"submit\",\n      color: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Entrar\"), React.createElement(Link, {\n      to: \"/register\",\n      className: \"mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Ainda n\\xE3o possui conta?\"), React.createElement(Form, {\n      className: \"text-center my-2\",\n      onSubmit: e => e.preventDefault(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Button, {\n      outline: true,\n      color: \"link\",\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"linkResetSenha\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Esqueci minha senha\"))), React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      className: this.props.className,\n      unmountOnClose: this.state.unmountOnClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      className: \"text-info\",\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Esqueci minha senha\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Label, {\n      className: \"text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Informe seu e-mail para redefinir sua senha\"), React.createElement(Input, {\n      type: \"email\",\n      placeholder: \"email@email.com\",\n      onChange: e => this.setState({\n        emailResetPassword: e.target.value\n      }),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"success\",\n      onClick: this.resetPassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Enviar E-mail\"), React.createElement(Button, {\n      color: \"danger\",\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Cancel\")))));\n  }\n\n}\n\nexport default withRouter(Login);","map":{"version":3,"sources":["/home/jonathan/Área de Trabalho/Super-Events/src/components/Login/index.js"],"names":["React","Component","Link","withRouter","firebase","FaEye","Button","Form","FormGroup","Label","Input","Modal","ModalHeader","ModalBody","ModalFooter","InputGroup","InputGroupAddon","Login","constructor","props","login","state","email","password","catch","error","code","alert","history","replace","message","type","s","emailResetPassword","modal","unmountOnClose","entrar","bind","resetPassword","toggle","changeUnmountOnClose","passwordHide","e","preventDefault","setState","prevState","value","target","JSON","parse","render","className"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport firebase from '../../firebase';\r\nimport './login.css';\r\nimport { FaEye} from \"react-icons/fa\"\r\nimport { Button, Form, FormGroup, Label, Input, Modal, ModalHeader, ModalBody, ModalFooter, InputGroup, InputGroupAddon } from 'reactstrap';\r\n\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.password = {type: 'password', s: '11'}\r\n\r\n        this.state = {\r\n            emailResetPassword: '',\r\n            email: '',\r\n            password: '',\r\n            modal: false,\r\n            unmountOnClose: true\r\n        };\r\n        this.entrar = this.entrar.bind(this);\r\n        this.login = this.login.bind(this);\r\n        this.resetPassword = this.resetPassword.bind(this);\r\n        this.toggle = this.toggle.bind(this);\r\n        this.changeUnmountOnClose = this.changeUnmountOnClose.bind(this);\r\n        this.passwordHide = this.passwordHide.bind(this);\r\n    }\r\n\r\n    passwordHide(){\r\n       \r\n    // this.setState.password({type: 'text'})\r\n        // else this.setState.password({type: 'password'})\r\n    }\r\n\r\n    entrar(e) {\r\n        e.preventDefault();\r\n        this.login();\r\n    }\r\n\r\n    resetPassword() {\r\n        if (firebase.resetPassword(this.state.emailResetPassword)) {\r\n            alert('E-mail enviado com sucesso!')\r\n        } else {\r\n            alert('Este usuário não existe!')\r\n        }\r\n    }\r\n\r\n    login = async () => {\r\n        const { email, password } = this.state;\r\n\r\n        try {\r\n            await firebase.login(email, password)\r\n                .catch((error) => {\r\n                    if (error.code === 'auth/user-not-found') {\r\n                        alert('Esse usuário não existe!');\r\n                    } else {\r\n                        alert('Codigo de erro: ' + error.code);\r\n                        return null;\r\n                    }\r\n                });\r\n            this.props.history.replace('/dashboard');\r\n\r\n        } catch (error) {\r\n            alert(error.message);\r\n        }\r\n\r\n    }\r\n\r\n    toggle() {\r\n        this.setState(prevState => ({\r\n            modal: !prevState.modal\r\n        }));\r\n    }\r\n\r\n    changeUnmountOnClose(e) {\r\n        let value = e.target.value;\r\n        this.setState({ unmountOnClose: JSON.parse(value) });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Form onSubmit={this.entrar} id=\"login\" className=\"my-2\">\r\n                    <h4 className=\"text-info text-center mb-5\">Entrar no Super Events</h4>\r\n                    <FormGroup>\r\n                        <Label>Email</Label>\r\n                        <Input type=\"email\" autoComplete=\"off\" autoFocus value={this.state.email}\r\n                            onChange={(e) => this.setState({ email: e.target.value })} placeholder=\"email@gmail.com\" required />\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                        <Label>Password</Label>\r\n                        <Input type={this.password.type} autoComplete=\"off\" value={this.state.password}\r\n                            onChange={(e) => this.setState({ password: e.target.value })} minLength=\"4\" placeholder=\"Sua senha\" required />\r\n                            \r\n                    </FormGroup>\r\n\r\n                    <Button type=\"submit\" color=\"info\">Entrar</Button>\r\n\r\n                    <Link to=\"/register\" className=\"mt-4\">Ainda não possui conta?</Link>\r\n\r\n                    <Form className=\"text-center my-2\" onSubmit={(e) => e.preventDefault()}>\r\n                        <Button outline color=\"link\" onClick={this.toggle}><span className=\"linkResetSenha\">Esqueci minha senha</span></Button>\r\n                    </Form>\r\n\r\n                    <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className} unmountOnClose={this.state.unmountOnClose}>\r\n                        <ModalHeader className=\"text-info\" toggle={this.toggle}>Esqueci minha senha</ModalHeader>\r\n                        <ModalBody>\r\n                            <Label className=\"text-danger\">Informe seu e-mail para redefinir sua senha</Label>\r\n                            <Input type=\"email\" placeholder=\"email@email.com\" onChange={(e) => this.setState({ emailResetPassword: e.target.value })} required />\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"success\" onClick={this.resetPassword}>Enviar E-mail</Button>\r\n                            <Button color=\"danger\" onClick={this.toggle}>Cancel</Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Login);"]},"metadata":{},"sourceType":"module"}