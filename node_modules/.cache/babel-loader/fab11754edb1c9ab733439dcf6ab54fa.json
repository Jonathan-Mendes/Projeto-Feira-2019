{"ast":null,"code":"import app from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth';\nimport 'firebase/storage';\nlet firebaseConfig = {\n  apiKey: \"AIzaSyAJAWqpng8KXlZKvOBafmZe4Ev2YZe9kdQ\",\n  authDomain: \"super-events-f85d9.firebaseapp.com\",\n  databaseURL: \"https://super-events-f85d9.firebaseio.com\",\n  projectId: \"super-events-f85d9\",\n  storageBucket: \"super-events-f85d9.appspot.com\",\n  messagingSenderId: \"585925636579\",\n  appId: \"1:585925636579:web:cf79d6a93cac4156c630d6\"\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(firebaseConfig); //Referenciando a database para acessar em outros locais\n\n    this.app = app.database();\n    this.storage = app.storage();\n  }\n\n  login(email, password) {\n    return app.auth().signInWithEmailAndPassword(email, password);\n  }\n\n  logout() {\n    return app.auth().signOut();\n  }\n\n  async register(nome, cpf, email, password, imagem) {\n    await app.auth().createUserWithEmailAndPassword(email, password);\n    const uid = app.auth().currentUser.uid;\n    return app.database().ref('usuarios').child(uid).set({\n      nome: nome,\n      cpf: cpf,\n      foto: imagem\n    });\n  }\n\n  resetPassword(email) {\n    try {\n      app.auth().sendPasswordResetEmail(email);\n      return true;\n    } catch (error) {\n      return false;\n    }\n  }\n\n  checkEmail(email) {\n    app.sendSignInLinkToEmail(email).then(function () {\n      window.localStorage.setItem('emailForSignIn', email);\n      return true;\n    }).catch(function (error) {});\n  }\n\n  isInitialized() {\n    return new Promise(resolve => {\n      app.auth().onAuthStateChanged(resolve);\n    });\n  }\n\n  getCurrent() {\n    return app.auth().currentUser && app.auth().currentUser.email;\n  }\n\n  getCurrentUid() {\n    return app.auth().currentUser && app.auth().currentUser.uid;\n  }\n\n  async getUserName(callback) {\n    if (!app.auth().currentUser) {\n      return null;\n    }\n\n    const uid = app.auth().currentUser.uid;\n    await app.database().ref('usuarios').child(uid).once('value').then(callback);\n  }\n\n  async deleteEventByKey(key) {\n    await app.database().ref('events').child(key).remove();\n  }\n\n  async destaqueEventByKey(key) {\n    await app.database().ref('events').child(key).update({\n      destacado: true\n    });\n  }\n\n}\n\nexport default new Firebase();","map":{"version":3,"sources":["/home/jonathan/Área de Trabalho/Super-Events/src/firebase.js"],"names":["app","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","constructor","initializeApp","database","storage","login","email","password","auth","signInWithEmailAndPassword","logout","signOut","register","nome","cpf","imagem","createUserWithEmailAndPassword","uid","currentUser","ref","child","set","foto","resetPassword","sendPasswordResetEmail","error","checkEmail","sendSignInLinkToEmail","then","window","localStorage","setItem","catch","isInitialized","Promise","resolve","onAuthStateChanged","getCurrent","getCurrentUid","getUserName","callback","once","deleteEventByKey","key","remove","destaqueEventByKey","update","destacado"],"mappings":"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","sourcesContent":["import app from 'firebase/app';\r\nimport 'firebase/database';\r\nimport 'firebase/auth';\r\nimport 'firebase/storage';\r\n\r\nlet firebaseConfig = {\r\n    apiKey: \"AIzaSyAJAWqpng8KXlZKvOBafmZe4Ev2YZe9kdQ\",\r\n    authDomain: \"super-events-f85d9.firebaseapp.com\",\r\n    databaseURL: \"https://super-events-f85d9.firebaseio.com\",\r\n    projectId: \"super-events-f85d9\",\r\n    storageBucket: \"super-events-f85d9.appspot.com\",\r\n    messagingSenderId: \"585925636579\",\r\n    appId: \"1:585925636579:web:cf79d6a93cac4156c630d6\"\r\n};\r\n\r\nclass Firebase {\r\n    constructor() {\r\n        app.initializeApp(firebaseConfig);\r\n\r\n        //Referenciando a database para acessar em outros locais\r\n        this.app = app.database();\r\n\r\n        this.storage = app.storage();\r\n    }\r\n\r\n    login(email, password) {\r\n        return app.auth().signInWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    logout() {\r\n        return app.auth().signOut();\r\n    }\r\n\r\n    async register(nome, cpf, email, password, imagem) {\r\n        await app.auth().createUserWithEmailAndPassword(email, password)\r\n\r\n        const uid = app.auth().currentUser.uid;\r\n\r\n        return app.database().ref('usuarios').child(uid).set({\r\n            nome: nome,\r\n            cpf: cpf,\r\n            foto: imagem\r\n        })\r\n    }\r\n\r\n    resetPassword(email) {\r\n        try {\r\n            app.auth().sendPasswordResetEmail(email);\r\n            return true\r\n        } catch (error) {\r\n            return false\r\n        }\r\n    }\r\n\r\n    checkEmail(email) {\r\n        app.sendSignInLinkToEmail(email).then(function () {\r\n                window.localStorage.setItem('emailForSignIn', email);\r\n                return true\r\n            })\r\n            .catch(function (error) {\r\n            });\r\n    }\r\n\r\n    isInitialized() {\r\n        return new Promise(resolve => {\r\n            app.auth().onAuthStateChanged(resolve);\r\n        })\r\n    }\r\n\r\n    getCurrent() {\r\n        return app.auth().currentUser && app.auth().currentUser.email;\r\n    }\r\n\r\n    getCurrentUid() {\r\n        return app.auth().currentUser && app.auth().currentUser.uid;\r\n    }\r\n\r\n    async getUserName(callback) {\r\n        if (!app.auth().currentUser) {\r\n            return null;\r\n        }\r\n        const uid = app.auth().currentUser.uid;\r\n        await app.database().ref('usuarios').child(uid).once('value').then(callback);\r\n    }\r\n\r\n    async deleteEventByKey(key){\r\n        await app.database().ref('events').child(key).remove();\r\n    }\r\n\r\n    async destaqueEventByKey(key){\r\n        await app.database().ref('events').child(key).update({\r\n            destacado: true\r\n        });\r\n    }\r\n}\r\n\r\nexport default new Firebase();"]},"metadata":{},"sourceType":"module"}