{"ast":null,"code":"var _jsxFileName = \"/home/jonathan/\\xC1rea de Trabalho/Super-Events/src/components/NewEvents/index.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport firebase from '../../firebase';\nimport './newevents.css';\nimport { Button, Form, FormGroup, Label, Input, FormText, Col, Row, Progress, Spinner, CustomInput, InputGroupAddon, InputGroup, InputGroupText } from 'reactstrap';\nimport CurrencyInput from 'react-currency-masked-input';\n\nclass NewEvents extends Component {\n  constructor(props) {\n    super(props);\n    this.now = new Date();\n\n    this.cadastrar = async e => {\n      //console.log(parseFloat(this.valorIngressoInt))\n      //console.log(parseInt(this.valorIngressoMeia))\n      e.preventDefault();\n\n      if (this.state.imagem !== '' && this.state.imagem !== null && this.state.url !== '' && this.verificaDate() && this.verificaTime()) {\n        let event = firebase.app.ref('events');\n        let chave = event.push().key;\n        await event.child(chave).set({\n          uid: firebase.getCurrentUid(),\n          titulo: this.state.titulo,\n          tituloLower: this.state.titulo.toLowerCase(),\n          imagem: this.state.url,\n          descricao: this.state.descricao,\n          data: this.state.data,\n          dataFinal: this.state.dataFinal,\n          hora: this.state.hora,\n          horaFinal: this.state.horaFinal,\n          estado: this.state.estado,\n          cidade: this.state.cidade,\n          cidadeLower: this.state.cidade.toLowerCase(),\n          local: this.state.local,\n          titulo_cidade: this.state.titulo.toLowerCase() + '_' + this.state.cidade.toLowerCase(),\n          cidade_data: this.state.cidade.toLowerCase() + '_' + this.state.data,\n          titulo_data: this.state.titulo.toLowerCase() + '_' + this.state.data,\n          autor: localStorage.nome,\n          valorIngressoInt: this.state.valorIngressoInt,\n          valorIngressoMeia: this.state.valorIngressoMeia,\n          valorIngresso: this.state.valorIngresso,\n          estqIngresso: this.state.estqIngresso\n        });\n        this.props.history.push('/dashboard');\n      } else {\n        alert('Preencha todos os campos corretamente!');\n      }\n    };\n\n    this.handleFile = async e => {\n      if (e.target.files[0]) {\n        const image = e.target.files[0];\n\n        if (image.type === \"image/png\" || image.type === \"image/jpeg\") {\n          await this.setState({\n            imagem: image\n          });\n          this.handleUpload();\n        } else {\n          alert('Envie uma imagem do tipo PNG ou JPEG');\n          this.setState({\n            imagem: null\n          });\n          return null;\n        }\n      }\n    };\n\n    this.handleUpload = async () => {\n      const imagem = this.state.imagem;\n      const currentUid = firebase.getCurrentUid();\n      const uploadTask = firebase.storage.ref(\"images/\".concat(currentUid, \"/\").concat(imagem.name)).put(imagem);\n      await uploadTask.on('state_changed', snapshot => {\n        //Progress\n        const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n        this.setState({\n          progress: progress\n        });\n      }, error => {\n        //Error\n        console.log('Error imagem: ' + error);\n      }, () => {\n        //Sucessful\n        firebase.storage.ref(\"images/\".concat(currentUid)).child(imagem.name).getDownloadURL().then(url => {\n          this.setState({\n            url: url\n          });\n        });\n      });\n      console.log(this.state.url);\n    };\n\n    this.state = {\n      uid: '',\n      titulo: '',\n      tituloLower: '',\n      imagem: null,\n      url: '',\n      descricao: '',\n      data: '',\n      dataFinal: '',\n      hora: '',\n      horaFinal: '',\n      cidades: [],\n      estados: [],\n      estado: '',\n      cidade: '',\n      cidadeLower: '',\n      local: '',\n      titulo_cidade: '',\n      progress: 0,\n      error: null,\n      isLoaded: false,\n      valorIngresso: false,\n      valorIngressoInt: '',\n      valorIngressoMeia: '',\n      estqIngresso: ''\n    };\n    this.cadastrar = this.cadastrar.bind(this);\n    this.handleFile = this.handleFile.bind(this);\n    this.handleUpload = this.handleUpload.bind(this);\n    this.fillCityList = this.fillCityList.bind(this);\n    this.formatDate = this.formatDate.bind(this);\n    this.verificaDate = this.verificaDate.bind(this);\n    this.formatTime = this.formatTime.bind(this);\n    this.verificaTime = this.verificaTime.bind(this);\n    this.renderiza = this.renderiza.bind(this);\n  }\n\n  componentDidMount() {\n    if (!firebase.getCurrent()) {\n      this.props.history.replace('/');\n      return null;\n    }\n\n    fetch(\"https://servicodados.ibge.gov.br/api/v1/localidades/estados\").then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        estados: result\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  fillCityList() {\n    fetch(\"https://servicodados.ibge.gov.br/api/v1/localidades/estados/\" + this.state.estado + \"/municipios\").then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        cidades: result\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  formatDate(today, ini, fim) {\n    return today.slice(ini, fim);\n  }\n\n  formatTime(time, ini, fim) {\n    return time.slice(ini, fim);\n  }\n\n  verificaTime() {\n    let horaIni = this.formatTime(this.state.hora, 0, 2);\n    let minIni = this.formatTime(this.state.hora, 3, 5);\n    let horaTer = this.formatTime(this.state.horaFinal, 0, 2);\n    let minTer = this.formatTime(this.state.horaFinal, 3, 5);\n\n    if (this.state.data === this.state.dataFinal && horaIni > horaTer) {\n      ;\n      alert('Hora inválida!');\n      return false;\n    } else if (this.state.data === this.state.dataFinal && horaIni === horaTer && minIni > minTer) {\n      alert('Hora inválida!');\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  verificaDate() {\n    let diaIni = this.formatDate(this.state.data, 8, 10);\n    let mesIni = this.formatDate(this.state.data, 5, 7);\n    let anoIni = this.formatDate(this.state.data, 0, 4);\n    let diaTer = this.formatDate(this.state.dataFinal, 8, 10);\n    let mesTer = this.formatDate(this.state.dataFinal, 5, 7);\n    let anoTer = this.formatDate(this.state.dataFinal, 0, 4);\n\n    if (this.state.data.length > 10 || this.state.dataFinal.length > 10) {\n      alert('Data inválida!');\n      return false;\n    } else if (anoIni < this.now.getFullYear() || anoIni > anoTer) {\n      alert('Data inválida!');\n      return false;\n    } else if (anoIni === this.now.getFullYear() && mesIni < this.now.getMonth() + 1 || anoIni === anoTer && mesIni > mesTer) {\n      alert('Data inválida!');\n      return false;\n    } else if (anoIni === this.now.getFullYear() && mesIni === this.now.getMonth() + 1 && diaIni < this.now.getDate() || anoIni === anoTer && mesIni === mesTer && diaIni > diaTer) {\n      ;\n      alert('Data inválida!');\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  renderiza(e) {\n    if (this.state.valorIngresso) {\n      return React.createElement(Col, {\n        md: 9,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"estqIngresso\",\n        className: \"text-info font-weight-bold mx-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"Quantidade de Ingressos\"), React.createElement(Input, {\n        id: \"estqIngresso\",\n        type: \"number\",\n        placeholder: \"0\",\n        min: 1,\n        required: true,\n        onChange: e => this.setState({\n          estqIngresso: e.target.value\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"text-info font-weight-bold mx-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, \"Valor do Ingresso\"))), React.createElement(Row, {\n        className: \"text-center\",\n        form: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"valInt\",\n        className: \"text-info font-weight-bold mx-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, \"Inteira\"), React.createElement(Input, {\n        id: \"valInt\",\n        placeholder: \"R$ 00,00\",\n        min: 1,\n        max: 10000,\n        required: true,\n        onChange: e => this.setState({\n          valorIngressoInt: e.target.value\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"valMeia\",\n        className: \"text-info font-weight-bold mx-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, \"Meia\"), React.createElement(Input, {\n        id: \"valMeia\",\n        placeholder: \"R$ 00,00\",\n        min: 1,\n        max: 10000,\n        required: true,\n        onChange: e => this.setState({\n          valorIngressoMeia: e.target.value\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      })))));\n    } else {\n      this.state.valorIngressoInt = 0;\n      this.state.valorIngressoMeia = 0;\n    }\n  }\n\n  render() {\n    const _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          estados = _this$state.estados,\n          cidades = _this$state.cidades;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return React.createElement(\"div\", {\n        id: \"spinner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(Spinner, {\n        style: {\n          width: '6rem',\n          height: '6rem'\n        },\n        color: \"dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        id: \"new\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/dashboard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, \"Voltar\")), React.createElement(Form, {\n        onSubmit: this.cadastrar,\n        id: \"new-post\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, this.state.alert), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(Input, {\n        id: \"ficheiro\",\n        type: \"file\",\n        onChange: this.handleFile,\n        class: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }), this.state.url !== '' ? React.createElement(\"img\", {\n        src: this.state.url,\n        width: \"250\",\n        height: \"150\",\n        alt: \"Copa do post\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }) : React.createElement(Progress, {\n        animated: true,\n        color: \"success\",\n        value: this.state.progress,\n        max: \"100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }), React.createElement(FormText, {\n        color: \"muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, \"Envie uma imagem do tipo PNG ou JPEG.\")), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, \"Titulo: \"), React.createElement(Input, {\n        id: \"name\",\n        type: \"text\",\n        value: this.state.titulo,\n        autoFocus: true,\n        onChange: e => this.setState({\n          titulo: e.target.value\n        }),\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      })), React.createElement(Row, {\n        form: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"dateIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, \"Data de In\\xEDcio:\"), React.createElement(Input, {\n        id: \"dateIn\",\n        type: \"date\",\n        value: this.state.data,\n        onChange: e => this.setState({\n          data: e.target.value\n        }),\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"dateFi\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, \"Data de T\\xE9rmino:\"), React.createElement(Input, {\n        id: \"dateFi\",\n        type: \"date\",\n        value: this.state.dataFinal,\n        onChange: e => this.setState({\n          dataFinal: e.target.value\n        }),\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      })))), React.createElement(Row, {\n        form: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"hrIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, \"Hora de In\\xEDcio:\"), React.createElement(Input, {\n        id: \"hrIn\",\n        type: \"time\",\n        value: this.state.hora,\n        onChange: e => this.setState({\n          hora: e.target.value\n        }),\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"hrFi\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, \"Hora do T\\xE9rmino:\"), React.createElement(Input, {\n        id: \"hrFi\",\n        type: \"time\",\n        value: this.state.horaFinal,\n        onChange: e => this.setState({\n          horaFinal: e.target.value\n        }),\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      })))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"selectEstados\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, \"Estado:\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"estado\",\n        id: \"selectEstados\",\n        value: this.state.estado,\n        onChange: e => this.setState({\n          estado: e.target.value\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }), estados.map(estado => React.createElement(\"option\", {\n        value: estado.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }, estado.nome)))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"selectCidades\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      }, \"Cidade:\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"cidade\",\n        id: \"selectCidades\",\n        value: this.state.cidade,\n        onChange: e => this.setState({\n          cidade: e.target.value\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, this.fillCityList(), React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }), cidades.map(cidade => React.createElement(\"option\", {\n        value: cidade.nome,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }, cidade.nome)))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"local\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      }, \"Local do Evento: \"), React.createElement(Input, {\n        id: \"local\",\n        type: \"text\",\n        value: this.state.local,\n        onChange: e => this.setState({\n          local: e.target.value\n        }),\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      })), React.createElement(Row, {\n        form: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }, \"Entrada:\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }, React.createElement(CustomInput, {\n        type: \"radio\",\n        id: \"radioPaga\",\n        onClick: e => this.setState({\n          valorIngresso: true\n        }),\n        name: \"customRadio\",\n        label: \"Paga\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }), React.createElement(CustomInput, {\n        type: \"radio\",\n        id: \"radioGratis\",\n        onClick: e => this.setState({\n          valorIngresso: false\n        }),\n        name: \"customRadio\",\n        label: \"Gratuita\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      })))), this.renderiza()), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"desc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393\n        },\n        __self: this\n      }, \"Descri\\xE7\\xE3o: \"), React.createElement(Input, {\n        id: \"desc\",\n        type: \"textarea\",\n        value: this.state.descricao,\n        placeholder: \"Alguma descri\\xE7\\xE3o...\",\n        onChange: e => this.setState({\n          descricao: e.target.value\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      })), React.createElement(Button, {\n        type: \"submit\",\n        color: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }, \"Cadastrar\")));\n    }\n  }\n\n}\n\nexport default withRouter(NewEvents);","map":{"version":3,"sources":["/home/jonathan/Área de Trabalho/Super-Events/src/components/NewEvents/index.js"],"names":["React","Component","Link","withRouter","firebase","Button","Form","FormGroup","Label","Input","FormText","Col","Row","Progress","Spinner","CustomInput","InputGroupAddon","InputGroup","InputGroupText","CurrencyInput","NewEvents","constructor","props","now","Date","cadastrar","e","preventDefault","state","imagem","url","verificaDate","verificaTime","event","app","ref","chave","push","key","child","set","uid","getCurrentUid","titulo","tituloLower","toLowerCase","descricao","data","dataFinal","hora","horaFinal","estado","cidade","cidadeLower","local","titulo_cidade","cidade_data","titulo_data","autor","localStorage","nome","valorIngressoInt","valorIngressoMeia","valorIngresso","estqIngresso","history","alert","handleFile","target","files","image","type","setState","handleUpload","currentUid","uploadTask","storage","name","put","on","snapshot","progress","Math","round","bytesTransferred","totalBytes","error","console","log","getDownloadURL","then","cidades","estados","isLoaded","bind","fillCityList","formatDate","formatTime","renderiza","componentDidMount","getCurrent","replace","fetch","res","json","result","today","ini","fim","slice","time","horaIni","minIni","horaTer","minTer","diaIni","mesIni","anoIni","diaTer","mesTer","anoTer","length","getFullYear","getMonth","getDate","value","render","message","width","height","map","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport firebase from '../../firebase';\nimport './newevents.css';\nimport {\n    Button, Form, FormGroup, Label, Input, FormText, Col, Row, Progress,\n    Spinner, CustomInput, InputGroupAddon, InputGroup, InputGroupText\n} from 'reactstrap';\nimport CurrencyInput from 'react-currency-masked-input'\n\nclass NewEvents extends Component {\n\n    now = new Date;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            uid: '',\n            titulo: '',\n            tituloLower: '',\n            imagem: null,\n            url: '',\n            descricao: '',\n            data: '',\n            dataFinal: '',\n            hora: '',\n            horaFinal: '',\n            cidades: [],\n            estados: [],\n            estado: '',\n            cidade: '',\n            cidadeLower: '',\n            local: '',\n            titulo_cidade: '',\n            progress: 0,\n            error: null,\n            isLoaded: false,\n            valorIngresso: false,\n            valorIngressoInt: '',\n            valorIngressoMeia: '',\n            estqIngresso: ''\n        };\n        this.cadastrar = this.cadastrar.bind(this);\n        this.handleFile = this.handleFile.bind(this);\n        this.handleUpload = this.handleUpload.bind(this);\n        this.fillCityList = this.fillCityList.bind(this);\n        this.formatDate = this.formatDate.bind(this);\n        this.verificaDate = this.verificaDate.bind(this);\n        this.formatTime = this.formatTime.bind(this);\n        this.verificaTime = this.verificaTime.bind(this);\n        this.renderiza = this.renderiza.bind(this);\n    }\n\n    componentDidMount() {\n        if (!firebase.getCurrent()) {\n            this.props.history.replace('/');\n            return null;\n        }\n        fetch(\"https://servicodados.ibge.gov.br/api/v1/localidades/estados\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.setState({\n                        isLoaded: true,\n                        estados: result\n                    });\n                },\n                (error) => {\n                    this.setState({\n                        isLoaded: true,\n                        error\n                    });\n                }\n            )\n    }\n\n    cadastrar = async (e) => {\n        //console.log(parseFloat(this.valorIngressoInt))\n        //console.log(parseInt(this.valorIngressoMeia))\n        e.preventDefault();\n        if ( this.state.imagem !== '' && this.state.imagem !== null && \n             this.state.url !== '' && this.verificaDate() && this.verificaTime())\n        {\n            let event = firebase.app.ref('events');\n            let chave = event.push().key;\n            await event.child(chave).set({\n                uid: firebase.getCurrentUid(),\n                titulo: this.state.titulo,\n                tituloLower: this.state.titulo.toLowerCase(),\n                imagem: this.state.url,\n                descricao: this.state.descricao,\n                data: this.state.data,\n                dataFinal: this.state.dataFinal,\n                hora: this.state.hora,\n                horaFinal: this.state.horaFinal,\n                estado: this.state.estado,\n                cidade: this.state.cidade,\n                cidadeLower: this.state.cidade.toLowerCase(),\n                local: this.state.local,\n                titulo_cidade: this.state.titulo.toLowerCase() + '_' + this.state.cidade.toLowerCase(),\n                cidade_data: this.state.cidade.toLowerCase() + '_' + this.state.data,\n                titulo_data: this.state.titulo.toLowerCase() + '_' + this.state.data,\n                autor: localStorage.nome,\n                valorIngressoInt: this.state.valorIngressoInt,\n                valorIngressoMeia: this.state.valorIngressoMeia,\n                valorIngresso: this.state.valorIngresso,\n                estqIngresso: this.state.estqIngresso\n            });\n            this.props.history.push('/dashboard');\n        } else {\n            alert('Preencha todos os campos corretamente!');\n        }\n    }\n\n    handleFile = async (e) => {\n\n        if (e.target.files[0]) {\n            const image = e.target.files[0];\n\n            if (image.type === \"image/png\" || image.type === \"image/jpeg\") {\n                await this.setState({ imagem: image });\n                this.handleUpload();\n            } else {\n                alert('Envie uma imagem do tipo PNG ou JPEG');\n                this.setState({ imagem: null });\n                return null;\n            }\n        }\n    }\n\n    handleUpload = async () => {\n        const { imagem } = this.state;\n        const currentUid = firebase.getCurrentUid();\n        const uploadTask = firebase.storage\n            .ref(`images/${currentUid}/${imagem.name}`)\n            .put(imagem);\n\n        await uploadTask.on('state_changed',\n            (snapshot) => {\n                //Progress\n                const progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\n                this.setState({ progress: progress });\n            },\n            (error) => {\n                //Error\n                console.log('Error imagem: ' + error);\n            },\n            () => {\n                //Sucessful\n                firebase.storage.ref(`images/${currentUid}`)\n                    .child(imagem.name)\n                    .getDownloadURL()\n                    .then(url => {\n                        this.setState({ url: url });\n                    })\n\n            })\n        console.log(this.state.url);\n    }\n\n    fillCityList() {\n        fetch(\"https://servicodados.ibge.gov.br/api/v1/localidades/estados/\" \n        + this.state.estado + \"/municipios\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.setState({\n                        isLoaded: true,\n                        cidades: result\n                    });\n                },\n                (error) => {\n                    this.setState({\n                        isLoaded: true,\n                        error\n                    });\n                }\n            )\n    }\n\n    formatDate(today, ini, fim) {\n        return today.slice(ini, fim);\n    }\n\n    formatTime(time, ini, fim) {\n        return time.slice(ini, fim)\n    }\n\n    verificaTime() {\n        let horaIni = this.formatTime(this.state.hora, 0, 2)\n        let minIni = this.formatTime(this.state.hora, 3, 5)\n        let horaTer = this.formatTime(this.state.horaFinal, 0, 2)\n        let minTer = this.formatTime(this.state.horaFinal, 3, 5)\n\n        if (this.state.data === this.state.dataFinal && horaIni > horaTer) {;\n            alert('Hora inválida!');\n            return false;\n        } else if (this.state.data === this.state.dataFinal && horaIni === horaTer && minIni > minTer) {\n            alert('Hora inválida!');\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    verificaDate() {\n        let diaIni = this.formatDate(this.state.data, 8, 10)\n        let mesIni = this.formatDate(this.state.data, 5, 7)\n        let anoIni = this.formatDate(this.state.data, 0, 4)\n        let diaTer = this.formatDate(this.state.dataFinal, 8, 10)\n        let mesTer = this.formatDate(this.state.dataFinal, 5, 7)\n        let anoTer = this.formatDate(this.state.dataFinal, 0, 4)\n\n        if (this.state.data.length > 10 || this.state.dataFinal.length > 10) {\n                alert('Data inválida!');\n                return false;\n        } else if (anoIni < this.now.getFullYear() || anoIni > anoTer) {\n                alert('Data inválida!');\n                return false;\n        } else if ((anoIni === this.now.getFullYear() && mesIni < this.now.getMonth() + 1)\n            || (anoIni === anoTer && mesIni > mesTer)) {\n                alert('Data inválida!');\n                return false;\n        } else if ((anoIni === this.now.getFullYear() && mesIni === this.now.getMonth() + 1 && diaIni < this.now.getDate()) || (anoIni === anoTer && mesIni === mesTer && diaIni > diaTer)) {;\n                alert('Data inválida!');\n                return false;\n        } else {\n                return true;\n        }\n    }\n\n    renderiza(e) {\n        if (this.state.valorIngresso) {\n            return (\n                <Col md={9}>\n                    <Row className=\"text-center\">\n                        <Col md={12}>\n                        <Label for=\"estqIngresso\" className=\"text-info font-weight-bold mx-2\">Quantidade de Ingressos</Label>\n                                <Input id=\"estqIngresso\" type=\"number\" placeholder=\"0\" min={1} required onChange={(e) => this.setState({ estqIngresso: e.target.value })} /> \n                        </Col>\n                    </Row>\n                    <Row className=\"text-center\">\n                        <Col md={12}>\n                        <Label className=\"text-info font-weight-bold mx-2\">Valor do Ingresso</Label>\n                        </Col>\n                    </Row>\n                    <Row className=\"text-center\" form>\n                        <Col md={6}>\n                            <FormGroup>\n                                <Label for=\"valInt\" className=\"text-info font-weight-bold mx-2\">Inteira</Label>\n                                <Input id=\"valInt\" placeholder=\"R$ 00,00\" min={1} max={10000} required\n                                onChange={(e) => this.setState({ valorIngressoInt: e.target.value })} />\n                            </FormGroup>\n                        </Col>\n                        <Col md={6}>\n                            <FormGroup>\n                                <Label for=\"valMeia\" className=\"text-info font-weight-bold mx-2\">Meia</Label>\n                                <Input id=\"valMeia\" placeholder=\"R$ 00,00\" min={1} max={10000} required\n                                onChange={(e) => this.setState({ valorIngressoMeia: e.target.value })} />              \n                            </FormGroup>\n                        </Col>\n                    </Row>\n                </Col>\n            );\n        } else {\n            this.state.valorIngressoInt = 0\n            this.state.valorIngressoMeia = 0\n        }\n    }\n\n    render() {\n        const { error, isLoaded, estados, cidades } = this.state;\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return (\n                <div id=\"spinner\">\n                    <Spinner style={{ width: '6rem', height: '6rem' }} color=\"dark\" />\n                </div>);\n        } else {\n\n            return (\n                <div>\n                    <header id=\"new\">\n                        <Link to=\"/dashboard\">Voltar</Link>\n                    </header>\n                    <Form onSubmit={this.cadastrar} id=\"new-post\">\n                        <span>{this.state.alert}</span>\n\n                        <FormGroup>\n                            <Input id=\"ficheiro\" type=\"file\"\n                                onChange={this.handleFile} class=\"btn btn-primary\" />\n                            {this.state.url !== '' ?\n                                <img src={this.state.url} width=\"250\" height=\"150\" alt=\"Copa do post\" />\n                                :\n                                <Progress animated color=\"success\" value={this.state.progress} max=\"100\" />\n                            }\n                            <FormText color=\"muted\">\n                                Envie uma imagem do tipo PNG ou JPEG.\n                        </FormText>\n                        </FormGroup>\n\n                        <FormGroup>\n                            <Label for=\"name\">Titulo: </Label>\n                            <Input id=\"name\" type=\"text\" value={this.state.titulo} autoFocus\n                                onChange={(e) => this.setState({ titulo: e.target.value })} required />\n                        </FormGroup>\n\n                        <Row form>\n                            <Col md={6}>\n                                <FormGroup>\n                                    <Label for=\"dateIn\">Data de Início:</Label>\n                                    <Input id=\"dateIn\" type=\"date\" value={this.state.data}\n                                        onChange={(e) => this.setState({ data: e.target.value })} required />\n                                </FormGroup>\n                            </Col>\n\n                            <Col md={6}>\n                                <FormGroup>\n                                    <Label for=\"dateFi\">Data de Término:</Label>\n                                    <Input id=\"dateFi\" type=\"date\" value={this.state.dataFinal}\n                                        onChange={(e) => this.setState({ dataFinal: e.target.value })} required />\n                                </FormGroup>\n                            </Col>\n                        </Row>\n\n                        <Row form>\n                            <Col md={6}>\n                                <FormGroup>\n                                    <Label for=\"hrIn\">Hora de Início:</Label>\n                                    <Input id=\"hrIn\" type=\"time\" value={this.state.hora}\n                                        onChange={(e) => this.setState({ hora: e.target.value })} required />\n                                </FormGroup>\n\n                            </Col>\n\n                            <Col md={6}>\n                                <FormGroup>\n                                    <Label for=\"hrFi\">Hora do Término:</Label>\n                                    <Input id=\"hrFi\" type=\"time\" value={this.state.horaFinal}\n                                        onChange={(e) => this.setState({ horaFinal: e.target.value })} required />\n                                </FormGroup>\n                            </Col>\n                        </Row>\n\n                        <FormGroup>\n                            <Label for=\"selectEstados\">Estado:</Label>\n                            <Input type=\"select\" name=\"estado\" id=\"selectEstados\" value={this.state.estado}\n                                onChange={(e) => this.setState({ estado: e.target.value })}>\n                                <option value=''></option>\n                                {estados.map(estado => (\n                                    <option value={estado.id}>\n                                        {estado.nome}\n                                    </option>\n                                ))}\n                            </Input>\n                        </FormGroup>\n\n                        <FormGroup>\n                            <Label for=\"selectCidades\">Cidade:</Label>\n                            <Input type=\"select\" name=\"cidade\" id=\"selectCidades\" value={this.state.cidade}\n                                onChange={(e) => this.setState({ cidade: e.target.value })}>\n                                {this.fillCityList()}\n                                <option value=''></option>\n                                {cidades.map(cidade => (\n                                    <option value={cidade.nome}>\n                                        {cidade.nome}\n                                    </option>\n                                ))}\n                            </Input>\n                        </FormGroup>\n\n                        <FormGroup>\n                            <Label for=\"local\">Local do Evento: </Label>\n                            <Input id=\"local\" type=\"text\" value={this.state.local}\n                                onChange={(e) => this.setState({ local: e.target.value })} required />\n                        </FormGroup>\n\n                        <Row form>\n                            <Col md={3}>\n                                <FormGroup>\n                                    <Label>Entrada:</Label>\n                                    <div>\n                                        <CustomInput type=\"radio\" id=\"radioPaga\" onClick={(e) => this.setState({ valorIngresso: true })} name=\"customRadio\" label=\"Paga\" />\n                                        <CustomInput type=\"radio\" id=\"radioGratis\" onClick={(e) => this.setState({ valorIngresso: false })} name=\"customRadio\" label=\"Gratuita\" />\n                                    </div>\n                                </FormGroup>\n                            </Col>\n                            {this.renderiza()}\n                        </Row>\n\n                        <FormGroup>\n                            <Label for=\"desc\">Descrição: </Label>\n                            <Input id=\"desc\" type=\"textarea\" value={this.state.descricao} placeholder=\"Alguma descrição...\"\n                                onChange={(e) => this.setState({ descricao: e.target.value })} />\n                        </FormGroup>\n\n                        <Button type=\"submit\" color=\"success\">Cadastrar</Button>\n                    </Form>\n              </div>\n            );\n        }\n    }\n}\n\nexport default withRouter(NewEvents);"]},"metadata":{},"sourceType":"module"}